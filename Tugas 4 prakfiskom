#kode Determinan Matriks

import numpy as np
from numpy.linalg import det

# Menggunakan matriks 2x2
M = np.array([[1, 2],
              [3, 4]])
print('M:\n', M)

# Menghitung determinan matriks 2x2
print('Determinant: %.1f' % det(M))

I = np.eye(2)
print('I:\n', I)
print('M*I:\n', np.dot(M, I))



#kode Invers Matriks

import numpy as np

# Membuat matriks 2x2
M = np.array([[10, -22],
              [3, 45]])

# Menghitung invers matriks
inverse_of_M = np.linalg.inv(M)

print(inverse_of_M)

# Membuat matriks 2x2
P = np.array([[10, -22],
              [3, 45]])

# Menghitung determinan matriks
determinant_of_P = np.linalg.det(P)

print(determinant_of_P)



#kondisi buruk
import numpy as np
from numpy.linalg import cond, matrix_rank

# Matriks Anya 2x2
A = np.array([[1, 1e-10],
              [1e-10, 1]])

print('Condition number:\n', cond(A))
print('Rank:\n', matrix_rank(A))

# Vektor y
y = np.array([[1], [2]])

# Menggabungkan matriks A dan vektor y
A_y = np.concatenate((A, y), axis=1)
print('Augmented matrix:\n', A_y)





import numpy as np
from numpy.linalg import cond, matrix_rank

# Matriks A dan vektor b baru
A = np.array([[1, 2],
              [3, 4]])

b = np.array([[5],
              [6]])

print('Condition number:\n', cond(A))
print('Rank:\n', matrix_rank(A))

# Menggabungkan matriks A dan vektor b
A_b = np.concatenate((A, b), axis=1)
print('Augmented matrix:\n', A_b)




#dimensi ruang nol
import numpy as np
from numpy.linalg import cond, matrix_rank

# Matriks A baru dengan dimensi ruang nol
A = np.array([[1, 2, 3],
              [4, 5, 6],
              [7, 8, 9]])

print('Condition number:\n', cond(A))
print('Rank:\n', matrix_rank(A))

# Matriks y baru
y = np.array([[0], [0], [0]])

# Menggabungkan matriks A dan vektor y
A_y = np.concatenate((A, y), axis=1)
print('Augmented matrix:\n', A_y)




